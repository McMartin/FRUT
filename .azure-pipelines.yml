trigger:
  branches:
    include:
      - main

parameters:
  - name: juceVersions
    type: object
    default: [4.2.0, 4.3.1, 5.0.0, 5.2.1, 5.3.1, 5.4.3, 5.4.7, 6.0.5, 6.1.6, 7.0.5]

jobs:
  - job: iOS
    displayName: iOS / Xcode
    pool:
      vmImage: macOS-12
    steps:
      - template: ci/azure-pipelines/steps-iOS.yml
        parameters:
          juceVersions: ${{ parameters.juceVersions }}

  - job: Linux_CodeBlocks
    displayName: Linux / CodeBlocks - Unix Makefiles
    pool:
      vmImage: ubuntu-20.04
    variables:
      cmakeGenerator: "CodeBlocks - Unix Makefiles"
    steps:
      - script: >
          sudo apt update && sudo apt install libxcursor-dev libxinerama-dev libxrandr-dev
        displayName: Install apt packages
      - script: >
          sudo apt install gcc-8 g++-8
          && sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-8 10
          && sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-8 10
        displayName: Install GCC 8 (old versions of JUCE don't build with GCC 9)
      - template: ci/azure-pipelines/steps-Makefiles.yml
        parameters:
          juceVersions: ${{ parameters.juceVersions }}

  - job: Linux_Make
    displayName: Linux / Unix Makefiles
    pool:
      vmImage: ubuntu-20.04
    variables:
      cmakeGenerator: "Unix Makefiles"
    steps:
      - script: >
          sudo apt update && sudo apt install gcc-8 g++-8 libasound2-dev
          libcurl4-openssl-dev libxcursor-dev libxinerama-dev libxrandr-dev
          libwebkit2gtk-4.0-dev
        displayName: Install apt packages
      - script: >
          sudo apt install gcc-8 g++-8
          && sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-8 10
          && sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-8 10
        displayName: Install GCC 8 (old versions of JUCE don't build with GCC 9)
      - template: ci/azure-pipelines/steps-Makefiles.yml
        parameters:
          juceVersions: ${{ parameters.juceVersions }}

  - job: macOS_Make
    displayName: macOS / Unix Makefiles
    pool:
      vmImage: macOS-11
    variables:
      cmakeGenerator: "Unix Makefiles"
    steps:
      - template: ci/azure-pipelines/steps-Makefiles.yml
        parameters:
          juceVersions: ${{ parameters.juceVersions }}

  - job: macOS_Xcode
    displayName: macOS / Xcode
    pool:
      vmImage: macOS-11
    steps:
      - template: ci/azure-pipelines/steps-Xcode.yml
        parameters:
          juceVersions: ${{ parameters.juceVersions }}

  - job: Windows_VS2019
    displayName: Windows / Visual Studio 2019
    pool:
      vmImage: windows-2019
    variables:
      cmakeGenerator: "Visual Studio 16 2019"
    steps:
      - template: ci/azure-pipelines/steps-VS.yml
        parameters:
          juceVersions: ${{ parameters.juceVersions }}

  - job: Windows_VS2022
    displayName: Windows / Visual Studio 2022
    pool:
      vmImage: windows-2022
    variables:
      cmakeGenerator: "Visual Studio 17 2022"
    steps:
      - template: ci/azure-pipelines/steps-VS.yml
        parameters:
          juceVersions: ${{ parameters.juceVersions }}
