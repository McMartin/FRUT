# This file was generated by Jucer2Reprojucer from "DSPDemo.jucer"

cmake_minimum_required(VERSION 3.4)


list(APPEND CMAKE_MODULE_PATH "${CMAKE_CURRENT_LIST_DIR}/../../../../cmake")
include(Reprojucer)


if(NOT DEFINED DSPDemo_jucer_FILE)
  message(FATAL_ERROR "DSPDemo_jucer_FILE must be defined")
endif()

get_filename_component(DSPDemo_jucer_FILE
  "${DSPDemo_jucer_FILE}" ABSOLUTE
  BASE_DIR "${CMAKE_BINARY_DIR}"
)


jucer_project_begin(
  JUCER_VERSION "5.2.0"
  PROJECT_FILE "${DSPDemo_jucer_FILE}"
  PROJECT_ID "yVderJ"
)

jucer_project_settings(
  PROJECT_NAME "DSPDemo"
  PROJECT_VERSION "1.0.0"
  COMPANY_NAME "ROLI Ltd."
  COMPANY_COPYRIGHT "ROLI Ltd."
  COMPANY_WEBSITE "www.juce.com"
  COMPANY_EMAIL "info@juce.com"
  REPORT_JUCE_APP_USAGE ON # Required for closed source applications without an Indie or Pro JUCE license
  DISPLAY_THE_JUCE_SPLASH_SCREEN ON # Required for closed source applications without an Indie or Pro JUCE license
  SPLASH_SCREEN_COLOUR "Dark"
  PROJECT_TYPE "GUI Application"
  BUNDLE_IDENTIFIER "com.roli.DSPDemo"
  BINARYDATACPP_SIZE_LIMIT "Default"
  CXX_LANGUAGE_STANDARD "C++14"
  # BINARYDATA_NAMESPACE
  # PREPROCESSOR_DEFINITIONS
)

jucer_project_files("DSPDemo/Source/Resources"
# Compile   Xcode     Binary
#           Resource  Resource
  .         .         x         "Resources/cassette_recorder.wav"
  .         .         x         "Source/EditorColourScheme.xml"
  .         .         x         "Resources/guitar_amp.wav"
)

jucer_project_files("DSPDemo/Source/Demos"
# Compile   Xcode     Binary
#           Resource  Resource
  x         .         x         "Source/Demos/ConvolutionDemo.cpp"
  x         .         x         "Source/Demos/FIRFilterDemo.cpp"
  x         .         x         "Source/Demos/GainDemo.cpp"
  x         .         x         "Source/Demos/IIRFilterDemo.cpp"
  x         .         x         "Source/Demos/OscillatorDemo.cpp"
  x         .         x         "Source/Demos/OverdriveDemo.cpp"
  x         .         x         "Source/Demos/SIMDRegisterDemo.cpp"
  x         .         x         "Source/Demos/StateVariableFilterDemo.cpp"
  x         .         x         "Source/Demos/WaveShaperTanhDemo.cpp"
)

jucer_project_files("DSPDemo/Source"
# Compile   Xcode     Binary
#           Resource  Resource
  .         .         .         "Source/DSPDemo.h"
  x         .         .         "Source/Main.cpp"
  .         .         .         "Source/Main.h"
  x         .         .         "Source/MainComponent.cpp"
  .         .         .         "Source/MainComponent.h"
)

jucer_project_module(
  juce_audio_basics
  PATH "../../modules"
)

jucer_project_module(
  juce_audio_devices
  PATH "../../modules"
  # JUCE_ASIO
  # JUCE_WASAPI
  # JUCE_WASAPI_EXCLUSIVE
  # JUCE_DIRECTSOUND
  # JUCE_ALSA
  # JUCE_JACK
  # JUCE_USE_ANDROID_OPENSLES
  # JUCE_USE_WINRT_MIDI
)

jucer_project_module(
  juce_audio_formats
  PATH "../../modules"
  # JUCE_USE_FLAC
  # JUCE_USE_OGGVORBIS
  JUCE_USE_MP3AUDIOFORMAT ON
  # JUCE_USE_LAME_AUDIO_FORMAT
  # JUCE_USE_WINDOWS_MEDIA_FORMAT
)

jucer_project_module(
  juce_audio_processors
  PATH "../../modules"
  # JUCE_PLUGINHOST_VST
  # JUCE_PLUGINHOST_VST3
  # JUCE_PLUGINHOST_AU
)

jucer_project_module(
  juce_audio_utils
  PATH "../../modules"
  # JUCE_USE_CDREADER
  # JUCE_USE_CDBURNER
)

jucer_project_module(
  juce_core
  PATH "../../modules"
  # JUCE_FORCE_DEBUG
  # JUCE_LOG_ASSERTIONS
  # JUCE_CHECK_MEMORY_LEAKS
  # JUCE_DONT_AUTOLINK_TO_WIN32_LIBRARIES
  # JUCE_INCLUDE_ZLIB_CODE
  # JUCE_USE_CURL
  # JUCE_CATCH_UNHANDLED_EXCEPTIONS
  # JUCE_ALLOW_STATIC_NULL_VARIABLES
)

jucer_project_module(
  juce_data_structures
  PATH "../../modules"
)

jucer_project_module(
  juce_dsp
  PATH "../../modules"
  # JUCE_ASSERTION_FIRFILTER
  # JUCE_DSP_USE_INTEL_MKL
  # JUCE_DSP_USE_SHARED_FFTW
  # JUCE_DSP_USE_STATIC_FFTW
  # JUCE_DSP_ENABLE_SNAP_TO_ZERO
)

jucer_project_module(
  juce_events
  PATH "../../modules"
  # JUCE_EXECUTE_APP_SUSPEND_ON_IOS_BACKGROUND_TASK
)

jucer_project_module(
  juce_graphics
  PATH "../../modules"
  # JUCE_USE_COREIMAGE_LOADER
  # JUCE_USE_DIRECTWRITE
)

jucer_project_module(
  juce_gui_basics
  PATH "../../modules"
  # JUCE_ENABLE_REPAINT_DEBUGGING
  # JUCE_USE_XSHM
  # JUCE_USE_XRENDER
  # JUCE_USE_XCURSOR
)

jucer_project_module(
  juce_gui_extra
  PATH "../../modules"
  # JUCE_WEB_BROWSER
  # JUCE_ENABLE_LIVE_CONSTANT_EDITOR
)

jucer_export_target(
  "Xcode (MacOSX)"
  # EXTRA_PREPROCESSOR_DEFINITIONS
  EXTRA_COMPILER_FLAGS "-pedantic-errors -Wreorder -Wconstant-conversion -Wint-conversion -Woverloaded-virtual -Wuninitialized -Wunused-parameter -Wshorten-64-to-32 -Wstrict-aliasing -Wshadow -Wconversion -Wsign-compare -Wsign-conversion"
  # EXTRA_LINKER_FLAGS
  # EXTERNAL_LIBRARIES_TO_LINK
  ICON_SMALL "<None>"
  ICON_LARGE "<None>"
  # CUSTOM_XCODE_RESOURCE_FOLDERS
  # DOCUMENT_FILE_EXTENSIONS
  # CUSTOM_PLIST
  # EXTRA_FRAMEWORKS
  # PREBUILD_SHELL_SCRIPT
  # POSTBUILD_SHELL_SCRIPT
)

jucer_export_target_configuration(
  "Xcode (MacOSX)"
  NAME "Debug"
  DEBUG_MODE ON
  BINARY_NAME "DSPDemo"
  # BINARY_LOCATION
  # HEADER_SEARCH_PATHS
  # EXTRA_LIBRARY_SEARCH_PATHS
  # PREPROCESSOR_DEFINITIONS
  OPTIMISATION "-O0 (no optimisation)"
  # OSX_BASE_SDK_VERSION
  # OSX_DEPLOYMENT_TARGET
  # OSX_ARCHITECTURE
  # CUSTOM_XCODE_FLAGS
  CXX_LANGUAGE_STANDARD "GNU++14"
  CXX_LIBRARY "Use Default"
  # CODE_SIGNING_IDENTITY
  # RELAX_IEEE_COMPLIANCE
  # LINK_TIME_OPTIMISATION
  # STRIP_LOCAL_SYMBOLS
)

jucer_export_target_configuration(
  "Xcode (MacOSX)"
  NAME "Release"
  DEBUG_MODE OFF
  BINARY_NAME "DSPDemo"
  # BINARY_LOCATION
  # HEADER_SEARCH_PATHS
  # EXTRA_LIBRARY_SEARCH_PATHS
  # PREPROCESSOR_DEFINITIONS
  OPTIMISATION "-O3 (fastest with safe optimisations)"
  # OSX_BASE_SDK_VERSION
  # OSX_DEPLOYMENT_TARGET
  # OSX_ARCHITECTURE
  # CUSTOM_XCODE_FLAGS
  CXX_LANGUAGE_STANDARD "C++14"
  CXX_LIBRARY "Use Default"
  # CODE_SIGNING_IDENTITY
  # RELAX_IEEE_COMPLIANCE
  # LINK_TIME_OPTIMISATION
  # STRIP_LOCAL_SYMBOLS
)

jucer_export_target(
  "Visual Studio 2017"
  # EXTRA_PREPROCESSOR_DEFINITIONS
  # EXTRA_COMPILER_FLAGS
  # EXTRA_LINKER_FLAGS
  # EXTERNAL_LIBRARIES_TO_LINK
  ICON_SMALL "<None>"
  ICON_LARGE "<None>"
  # PLATFORM_TOOLSET "(default)"
)

jucer_export_target_configuration(
  "Visual Studio 2017"
  NAME "Debug"
  DEBUG_MODE ON
  BINARY_NAME "DSPDemo"
  # BINARY_LOCATION
  # HEADER_SEARCH_PATHS
  # EXTRA_LIBRARY_SEARCH_PATHS
  # PREPROCESSOR_DEFINITIONS
  OPTIMISATION "No optimisation"
  WARNING_LEVEL "High"
  # TREAT_WARNINGS_AS_ERRORS
  RUNTIME_LIBRARY "(Default)"
  WHOLE_PROGRAM_OPTIMISATION "Enable when possible"
  # INCREMENTAL_LINKING
  # PREBUILD_COMMAND
  # POSTBUILD_COMMAND
  GENERATE_MANIFEST ON
  CHARACTER_SET "Default"
  # ARCHITECTURE "x64"
  # RELAX_IEEE_COMPLIANCE
)

jucer_export_target_configuration(
  "Visual Studio 2017"
  NAME "Release"
  DEBUG_MODE OFF
  BINARY_NAME "DSPDemo"
  # BINARY_LOCATION
  # HEADER_SEARCH_PATHS
  # EXTRA_LIBRARY_SEARCH_PATHS
  # PREPROCESSOR_DEFINITIONS
  OPTIMISATION "Maximise speed"
  WARNING_LEVEL "High"
  # TREAT_WARNINGS_AS_ERRORS
  RUNTIME_LIBRARY "(Default)"
  WHOLE_PROGRAM_OPTIMISATION "Enable when possible"
  # INCREMENTAL_LINKING
  # PREBUILD_COMMAND
  # POSTBUILD_COMMAND
  GENERATE_MANIFEST ON
  CHARACTER_SET "Default"
  # ARCHITECTURE "x64"
  # RELAX_IEEE_COMPLIANCE
)

jucer_export_target(
  "Linux Makefile"
  # EXTRA_PREPROCESSOR_DEFINITIONS
  # EXTRA_COMPILER_FLAGS
  # EXTRA_LINKER_FLAGS
  # EXTERNAL_LIBRARIES_TO_LINK
  ICON_SMALL "<None>"
  ICON_LARGE "<None>"
  # CXX_STANDARD_TO_USE
  # PKGCONFIG_LIBRARIES
)

jucer_export_target_configuration(
  "Linux Makefile"
  NAME "Debug"
  DEBUG_MODE ON
  BINARY_NAME "DSPDemo"
  # BINARY_LOCATION
  # HEADER_SEARCH_PATHS
  # EXTRA_LIBRARY_SEARCH_PATHS
  # PREPROCESSOR_DEFINITIONS
  OPTIMISATION "-O0 (no optimisation)"
  ARCHITECTURE "(Default)"
)

jucer_export_target_configuration(
  "Linux Makefile"
  NAME "Release"
  DEBUG_MODE OFF
  BINARY_NAME "DSPDemo"
  # BINARY_LOCATION
  # HEADER_SEARCH_PATHS
  # EXTRA_LIBRARY_SEARCH_PATHS
  # PREPROCESSOR_DEFINITIONS
  OPTIMISATION "-O3 (fastest with safe optimisations)"
  ARCHITECTURE "(Default)"
)

jucer_project_end()
